{"ast":null,"code":"var _jsxFileName = \"D:\\\\Antrorse\\\\task-4\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validEmail = new RegExp('^([a-zA-Z0-9._%+-]+)@([a-zA-Z0-9.-]+)\\\\.([a-zA-Z]{2,})$');\nconst validPassword = new RegExp('^(?=.*?[A-Za-z])(?=.*?[0-9]).{6,}$');\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedin, setLoggedin] = useState(false);\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  if (!validEmail.test(email)) {\n    setEmailError('Please enter a valid email address');\n  } else {\n    setEmailError('');\n  }\n  if (!validPassword.test(password)) {\n    setPasswordError('Password must contain at least 6 characters including letters and numbers');\n  } else {\n    setPasswordError('');\n  }\n  if (validEmail.test(email) && validPassword.test(password) && validUsername.test(username)) {\n    console.log('Signup successful');\n  }\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 104\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 113\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 71\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sup-btn\",\n        children: \"Don't have an account? Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Oy+TX/TaHRWrW9SweBT86q0v9ho=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","validEmail","RegExp","validPassword","Login","_s","email","setEmail","password","setPassword","loggedin","setLoggedin","emailError","setEmailError","passwordError","setPasswordError","test","validUsername","username","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","_c","$RefreshReg$"],"sources":["D:/Antrorse/task-4/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../App.css';\r\n\r\n\r\nconst validEmail = new RegExp('^([a-zA-Z0-9._%+-]+)@([a-zA-Z0-9.-]+)\\\\.([a-zA-Z]{2,})$');\r\nconst validPassword = new RegExp('^(?=.*?[A-Za-z])(?=.*?[0-9]).{6,}$');\r\n\r\nfunction Login() {\r\n    const [email,setEmail]=useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loggedin, setLoggedin] = useState(false);\r\n    const [emailError, setEmailError]=useState('');\r\n    const [passwordError, setPasswordError]=useState('');\r\n\r\n    if (!validEmail.test(email)) {\r\n        setEmailError('Please enter a valid email address');\r\n    } else {\r\n        setEmailError('');\r\n    }\r\n\r\n    if (!validPassword.test(password)) {\r\n        setPasswordError('Password must contain at least 6 characters including letters and numbers');\r\n    } else {\r\n        setPasswordError('');\r\n    }\r\n    if (validEmail.test(email) && validPassword.test(password) && validUsername.test(username)) {\r\n        console.log('Signup successful');\r\n    }\r\n\r\n\r\n  return (\r\n    <center>\r\n        <form className='form-login'>\r\n            <h1>Login Page</h1>\r\n            <input type='email' placeholder='Email' onChange={(e)=>{setEmail(e.target.value)}}></input><br></br>\r\n            <input type='password' placeholder='Password' onChange={(e)=>{setPassword(e.target.value)}}></input><br></br>\r\n            <button type='submit' className='login-btn'>Login</button><br></br>\r\n            <button className='sup-btn'>Don't have an account? Signup</button><br></br>\r\n        </form>\r\n    </center>\r\n  )\r\n}\r\n\r\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}